{"version":3,"sources":["spotify.js","Components/Login.js","Components/SidebarOption.js","Components/DataLayer.js","Components/PlaylistOption.js","Components/Sidebar.js","Components/Header.js","Components/SongRow.js","Components/Body.js","Components/Footer.js","Components/Player.js","App.js","reportWebVitals.js","reducer.js","index.js"],"names":["loginUrl","join","Login","props","className","src","alt","href","SidebarOption","option","Icon","DataLayerContext","createContext","DataLayer","initialState","reducer","children","Provider","value","useReducer","useDataLayerValue","useContext","PlaylistOption","playlist","onClick","current_playlist","dispatch","name","Sidebar","spotify","playlists","HomeIcon","SearchIcon","LibraryMusicIcon","items","map","index","getPlaylist","id","then","response","type","Header","user","placeholder","Avatar","images","url","alr","display_name","Songrow","track","playSong","item","songRow","album","artists","artist","millis","minutes","Math","floor","seconds","toFixed","millisToMinutesAndSeconds","duration_ms","Body","play","uris","res","getMyCurrentPlaybackState","r","playing","description","context_uri","fontSize","tracks","Footer","token","shuffle","repeat","useEffect","handlePlayPause","pause","skipNext","a","skipToNext","getMyCurrentPlayingTrack","repeatStates","toggleRepeat","newState","indexOf","setRepeat","setShuffle","skipToPrevious","Grid","container","spacing","xs","Slider","aria-labelledby","defaultValue","step","min","max","onChange","e","setVolume","Player","SpotifyWebAPi","App","current_playlist_id","hash","window","location","substring","split","reduce","intial","parts","decodeURIComponent","_token","access_token","setAccessToken","getMe","getUserPlaylists","discover_weekly","console","log","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","state","action","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.705d44b7.chunk.js","sourcesContent":["// https://developer.spotify.com/documentation/web-playback-sdk/quick-start/#introduction\r\n\r\nexport const authEndpoint = \"https://accounts.spotify.com/authorize\";\r\n\r\n// Replace with APP ID, URI\r\n\r\nconst redirectURI = \"https://nahsama.github.io/spotify-clone/\";\r\n\r\nconst clientId = \"e96164a811d64ed29f4320414214c6ef\";\r\n\r\nconst scopes = [\r\n    \"user-read-currently-playing\",\r\n    \"user-read-recently-played\",\r\n    \"user-read-playback-state\",\r\n    \"user-top-read\",\r\n    \"user-modify-playback-state\",\r\n  ];\r\n\r\nexport const getTokenFromURL = () => {\r\n    return window.location.hash\r\n        .substring(1)\r\n        .split('&')\r\n        .reduce((intial, item) => {\r\n            let parts = item.split('=');\r\n            intial[parts[0]] = decodeURIComponent(parts[1]);\r\n\r\n            return intial;\r\n        }, {});\r\n}\r\n\r\n\r\nexport const loginUrl = `${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectURI}&scope=${scopes.join(\r\n    \"%20\"\r\n)}&response_type=token&show_dialog=true`;","import React from 'react'\r\nimport { loginUrl } from '../spotify'\r\nimport '../Styles/Login.css'\r\n\r\nexport default function Login(props) {\r\n    \r\n\r\n    return (\r\n        <div className=\"login\">\r\n            <h1>Login</h1>\r\n            <img \r\n                src=\"https://storage.googleapis.com/pr-newsroom-wp/1/2018/11/Spotify_Logo_CMYK_White.png\" \r\n                alt=\"spotify logo\"\r\n            />\r\n            <a href={loginUrl}>LOGIN WITH SPOTIFY</a>\r\n            {/* Spotify Logo */}\r\n            {/* Login Button */}\r\n        </div>\r\n    )\r\n}\r\n","  \r\nimport React from \"react\";\r\nimport \"../Styles/SidebarOption.css\";\r\n// import { useDataLayerValue } from './DataLayer';\r\n\r\n\r\nfunction SidebarOption({ option = \"test\", Icon }) {\r\n\r\n  return (\r\n    <div className=\"sidebarOption\" >\r\n      {Icon && <Icon className=\"sidebarOption__icon\" />}\r\n      {Icon ? <h4>{option}</h4> : <p>{option}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SidebarOption;","import React, \r\n{\r\n    createContext,\r\n    useContext,\r\n    useReducer\r\n}   from 'react';\r\n\r\nexport const DataLayerContext = createContext();\r\n\r\nexport const DataLayer = ({\r\n    initialState, \r\n    reducer, \r\n    children}) => (\r\n        <DataLayerContext.Provider value={useReducer(reducer, initialState)}>\r\n            {children}\r\n        </DataLayerContext.Provider>        \r\n);\r\n\r\nexport const useDataLayerValue = () => useContext(DataLayerContext)","import React from 'react'\r\nimport \"../Styles/PlaylistOption.css\";\r\nimport { useDataLayerValue } from './DataLayer';\r\n\r\n\r\nexport default function PlaylistOption({playlist, Icon, onClick, className}) {\r\n    const [{current_playlist, dispatch}] = useDataLayerValue();\r\n  return (\r\n    <div className={current_playlist?.name === playlist.name ? \"playlistOption playlistOption__currentOption\" : \"playlistOption\"}  onClick = {onClick}>\r\n      {Icon && <Icon className=\"playlistOption__icon\" />}\r\n      {Icon ? <h4>{playlist.name}</h4> : <p>{playlist.name}</p>}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport '../Styles/Sidebar.css';\r\nimport SidebarOption from './SidebarOption';\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport LibraryMusicIcon from \"@material-ui/icons/LibraryMusic\";\r\nimport { useDataLayerValue } from './DataLayer';\r\nimport PlaylistOption from './PlaylistOption';\r\n\r\nexport default function Sidebar({spotify}) {\r\n    \r\n    const [{ playlists }, dispatch] = useDataLayerValue();\r\n\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <img\r\n                className=\"sidebar__logo\"\r\n                src=\"https://getheavy.com/wp-content/uploads/2019/12/spotify2019-830x350.jpg\"\r\n                alt=\"\"\r\n            />\r\n            <SidebarOption Icon={HomeIcon} option=\"Home\"/>\r\n            <SidebarOption Icon={SearchIcon} option=\"Search\"/>\r\n            <SidebarOption Icon={LibraryMusicIcon} option=\"Library\"/>\r\n            <br />\r\n            <strong className=\"sidebar__title\">PLAYLISTS</strong>\r\n            <hr />\r\n            {playlists?.items?.map((playlist, index) => (\r\n                <PlaylistOption \r\n                    key={index} \r\n                    playlist={playlist} \r\n                    onClick={() => {\r\n                        spotify.getPlaylist(playlist.id).then((response) => {\r\n                        dispatch({\r\n                            type: \"SET_CURRENT_PLAYLIST\",\r\n                            current_playlist: response\r\n                            })\r\n                    })}}/>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport \"../Styles/Header.css\"\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport {Avatar} from '@material-ui/core';\r\nimport { useDataLayerValue } from './DataLayer';\r\n\r\n\r\nexport default function Header({spotify}) {\r\n    \r\n    const [{ user }, dispatch] = useDataLayerValue();\r\n    return (\r\n        <div className=\"header\">\r\n            <div className=\"header__left\">\r\n                <SearchIcon/>\r\n                <input\r\n                    placeholder=\"Search for Artists, Songs and Podcasts \"\r\n                    type=\"text\"\r\n                />\r\n            </div>\r\n            <div className=\"header__right\">\r\n                <Avatar src={user?.images[0]?.url} alr=\"RQ\" />\r\n                <h4>{user?.display_name}</h4>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport '../Styles/SongRow.css'\r\nimport { useDataLayerValue } from './DataLayer';\r\n\r\nexport default function Songrow({track=\"test\", playSong}) {\r\n    \r\n    // console.log(track);\r\n    function millisToMinutesAndSeconds(millis) {\r\n        var minutes = Math.floor(millis / 60000);\r\n        var seconds = ((millis % 60000) / 1000).toFixed(0);\r\n        return minutes + \":\" + (seconds < 10 ? '0' : '') + seconds;\r\n    }\r\n\r\n    const [{ item }, dispatch] = useDataLayerValue();\r\n\r\n    const songRow = (track.id === item?.id) ? \" songRow-is-playing songRow\": \"songRow\";\r\n      \r\n    return (\r\n        <div className={songRow} onClick={() => playSong(track.id)}>\r\n            <div className=\"songRow__info\">\r\n                <img className=\"songRow__avatar\" src={track.album.images[0].url} alt=\"\"/>\r\n                <div className=\"songRow__name\">\r\n                    <h1>{track.name}</h1>\r\n                    <p>\r\n                        {track.artists.map((artist) => artist.name)}\r\n                    </p>\r\n                </div>\r\n                \r\n            </div>\r\n            <div className=\"songRow__album\">\r\n                <p>\r\n                    {track.album.name}\r\n                </p>\r\n            </div>\r\n            <div className=\"songRow__time\">\r\n                <p>\r\n                    {millisToMinutesAndSeconds(track.duration_ms)}\r\n                </p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport '../Styles/Body.css';\r\nimport Header from './Header';\r\nimport SongRow from './SongRow';\r\nimport PlayCircleFilledIcon from \"@material-ui/icons/PlayCircleFilled\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz'\r\nimport { useDataLayerValue } from './DataLayer';\r\nimport { Favorite } from '@material-ui/icons';\r\n\r\n\r\nexport default function Body({spotify}) {\r\n    \r\n    const [{ current_playlist }, dispatch] = useDataLayerValue();\r\n\r\n    // console.log(\"This is current playlist\", current_playlist);\r\n\r\n    const playPlaylist = (id) => {\r\n        spotify\r\n            .play({\r\n                context_uri: `spotify:playlist:${current_playlist.id}`,\r\n            })\r\n            .then((res) => {\r\n                spotify.getMyCurrentPlaybackState().then((r) => {\r\n                    dispatch({\r\n                        type: \"SET_ITEM\",\r\n                        item: r.item\r\n                    });\r\n                    dispatch({\r\n                        type: \"SET_PLAYING\",\r\n                        playing: true\r\n                    });\r\n                });\r\n            });\r\n    }\r\n\r\n    const playSong = (id) => {\r\n        spotify\r\n            .play({\r\n                uris: [`spotify:track:${id}`],\r\n            })\r\n            .then((res) => {\r\n                spotify.getMyCurrentPlaybackState().then((r) => {\r\n                    dispatch({\r\n                        type: \"SET_ITEM\",\r\n                        item: r.item\r\n                    });\r\n                    dispatch({\r\n                        type: \"SET_PLAYING\",\r\n                        playing: true,\r\n                    });\r\n                });\r\n            });\r\n    }\r\n\r\n    return (\r\n        <div className=\"body\">\r\n            <Header spotify={spotify}/>\r\n            <div className=\"body__info\">\r\n                <img src={current_playlist?.images[0].url} alt=\"dw\"/>\r\n                <div className=\"body__infoText\">\r\n                    <strong>Playlist</strong>\r\n                    <h2>{current_playlist?.name}</h2>\r\n                    <p>{current_playlist?.description}</p>\r\n                </div>\r\n            </div>\r\n            <div className=\"body__songs\">\r\n                <div className=\"body__icons\">\r\n                    <PlayCircleFilledIcon\r\n                        className=\"body__shuffle\"\r\n                        onClick = {playPlaylist}\r\n                    />\r\n                    <FavoriteIcon fontSize=\"large\" />\r\n                    <MoreHorizIcon />\r\n                </div>\r\n                <div className=\"body__header\">\r\n                    <div>\r\n                        <p>Title</p>\r\n                    </div>\r\n                    <div>\r\n                        <p>Album</p>\r\n                    </div>\r\n                    <div>\r\n                        <p>Time</p>\r\n                    </div>\r\n                </div>\r\n                {/* List of Songs */}\r\n                {current_playlist?.tracks.items?.map((item, index) => (\r\n                    <SongRow key={index} track={item.track} playSong={playSong}/>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport \"../Styles/Footer.css\";\r\nimport PlayCircleOutlineIcon from \"@material-ui/icons/PlayCircleOutline\";\r\nimport SkipPreviousIcon from \"@material-ui/icons/SkipPrevious\";\r\nimport SkipNextIcon from \"@material-ui/icons/SkipNext\";\r\nimport ShuffleIcon from \"@material-ui/icons/Shuffle\";\r\nimport RepeatIcon from \"@material-ui/icons/Repeat\";\r\nimport RepeatOneIcon from '@material-ui/icons/RepeatOne';\r\nimport VolumeDownIcon from \"@material-ui/icons/VolumeDown\";\r\nimport PauseCircleOutlineIcon from \"@material-ui/icons/PauseCircleOutline\";\r\nimport PlaylistPlayIcon from \"@material-ui/icons/PlaylistPlay\";\r\nimport { Grid, Slider } from \"@material-ui/core\";\r\nimport { useDataLayerValue } from './DataLayer';\r\n\r\n\r\nexport default function Footer({spotify}) {\r\n    \r\n    const [{token, item, playing, shuffle, repeat}, dispatch] = useDataLayerValue();\r\n    \r\n    useEffect(() => {\r\n        spotify.getMyCurrentPlaybackState().then((r) => {\r\n            // console.log(\"Context: My current track is \" + item?.name);\r\n            // console.log(\"Hook: My current track is \" + r.item?.name);\r\n            \r\n            if(item?.name !== r.item?.name){\r\n                dispatch({\r\n                    type: \"SET_ITEM\",\r\n                    item: r.item,\r\n                });\r\n            };\r\n        })\r\n      }, );\r\n\r\n    const handlePlayPause = () => {\r\n        if (playing) {\r\n            spotify.pause();\r\n            dispatch({\r\n                type: \"SET_PLAYING\",\r\n                playing: false\r\n            });\r\n        }else {\r\n            spotify.play();\r\n            dispatch({\r\n                type:\"SET_PLAYING\",\r\n                playing: true\r\n            });\r\n        };\r\n    };\r\n\r\n    // const skipNext = () => {\r\n    //     spotify.skipToNext().then((res) => {\r\n    //         console.log(\"Next track\" + res);\r\n    //     });\r\n    //     spotify.getMyCurrentPlayingTrack().then((r) => {\r\n    //         console.log(\"My current track is\" + r.item.name)\r\n    //       dispatch({\r\n    //         type: \"SET_ITEM\",\r\n    //         item: r.item,\r\n    //       });\r\n    //       dispatch({\r\n    //         type: \"SET_PLAYING\",\r\n    //         playing: true,\r\n    //       });\r\n    //     });\r\n    //   };\r\n\r\n    const skipNext = async() => {\r\n        spotify.skipToNext();\r\n        const r = await spotify.getMyCurrentPlayingTrack();\r\n        dispatch({\r\n            type: \"SET_ITEM\",\r\n            item: r.item,\r\n        });\r\n        dispatch({\r\n            type: \"SET_PLAYING\",\r\n            playing: true,\r\n        });\r\n    }\r\n\r\n    const skipPrevious = () => {\r\n        spotify.skipToPrevious();\r\n        spotify.getMyCurrentPlayingTrack().then((r) => {\r\n            dispatch({\r\n                type: \"SET_ITEM\",\r\n                item: r.item\r\n            });\r\n            dispatch({\r\n                type: \"SET_PLAYING\",\r\n                playing: true\r\n            });\r\n        });\r\n    };\r\n\r\n    const changeVolume = (e, value) => {\r\n        spotify.setVolume(value);\r\n    }\r\n\r\n    const toggleShuffle = () => {\r\n        spotify.setShuffle(!shuffle);\r\n        dispatch({\r\n            type: \"SET_SHUFFLE\",\r\n            shuffle: !shuffle\r\n        });\r\n    }\r\n\r\n    const repeatStates = [\"track\", \"context\", \"off\"];\r\n        \r\n    const toggleRepeat = () => {\r\n        const currentState = repeatStates.indexOf(repeat);\r\n        const newState = (currentState + 1 ) % 3;\r\n        spotify.setRepeat(repeatStates[newState]);\r\n        dispatch({\r\n            type: \"SET_REPEAT\",\r\n            repeat: repeatStates[newState]\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"footer\">\r\n            <div className=\"footer__left\">\r\n                <img \r\n                    className=\"footer__albumLogo\"\r\n                    src={item?.album.images[0].url}\r\n                    alt={item?.name}\r\n                />\r\n                {item ? (\r\n                <div className=\"footer__songInfo\">\r\n                    <h4>{item.name}</h4>\r\n                    <p>{item.artists.map((artist) => artist.name).join(\", \")}</p>\r\n                </div>\r\n                ) : (\r\n                <div className=\"footer__songInfo\">\r\n                    <h4>No song is playing</h4>\r\n                    <p>...</p>\r\n                </div>\r\n                )}\r\n            </div>\r\n\r\n            <div className=\"footer__center\">\r\n                <ShuffleIcon className={shuffle ? \"footer__green\" : \"footer__icon\"} onClick={toggleShuffle}/>\r\n                <SkipPreviousIcon className=\"footer__icon\" onClick={skipPrevious}/>\r\n                \r\n                {playing? (\r\n                    <PauseCircleOutlineIcon \r\n                        fontSize=\"large\" \r\n                        className=\"footer__icon\"\r\n                        onClick={handlePlayPause}\r\n                    />\r\n                ) : (\r\n                    <PlayCircleOutlineIcon \r\n                        fontSize=\"large\" \r\n                        className=\"footer__icon\"\r\n                        onClick={handlePlayPause}\r\n                    />\r\n                )}\r\n                \r\n                <SkipNextIcon className=\"footer__icon\" onClick={skipNext}/>\r\n                {repeat === \"track\" && <RepeatOneIcon className=\"footer__green\" onClick={toggleRepeat}/>}\r\n                {repeat === \"context\" && <RepeatIcon className=\"footer__green\" onClick={toggleRepeat}/>}\r\n                {repeat === \"off\" && <RepeatIcon className=\"footer__icon\" onClick={toggleRepeat}/>}\r\n               \r\n            </div>\r\n\r\n            <div className=\"footer__right\">\r\n                <Grid container spacing={2}>\r\n                <Grid >\r\n                    <PlaylistPlayIcon />\r\n                </Grid>\r\n                <Grid >\r\n                    <VolumeDownIcon />\r\n                </Grid>\r\n                <Grid xs>\r\n                    <Slider \r\n                        aria-labelledby=\"continuous-slider\" \r\n                        className=\"continuous-slider\" \r\n                        defaultValue={40}\r\n                        step={1}\r\n                        min={0}\r\n                        max={100}\r\n                        onChange={changeVolume}\r\n                        />\r\n                </Grid>\r\n                </Grid>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n","import React from 'react';\r\nimport '../Styles/Player.css';\r\nimport Sidebar from './Sidebar';\r\nimport Body from './Body';\r\nimport Footer from './Footer'\r\n\r\n\r\nexport function Player({spotify}) {\r\n    return (\r\n        <div className=\"player\">\r\n            <div className=\"player__body\">\r\n                <Sidebar spotify={spotify}/>\r\n                <Body spotify={spotify} />\r\n            </div>\r\n            <Footer spotify={spotify} />\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect } from 'react';\nimport './App.css';\nimport Login from './Components/Login.js';\nimport { Player } from './Components/Player';\nimport { getTokenFromURL } from './spotify';\nimport SpotifyWebAPi from \"spotify-web-api-js\";\nimport { useDataLayerValue } from './Components/DataLayer';\n\n\nconst spotify = new SpotifyWebAPi();\n\n\nfunction App() {\n    const [{token, current_playlist_id}, dispatch] = useDataLayerValue();\n\n    //Run code based on a given condition\n    useEffect(() => {\n        //code..\n        const hash = getTokenFromURL();\n        window.location.hash = \"\";\n        const _token = hash.access_token;\n\n        if (_token) {\n            dispatch({\n                type: \"SET_TOKEN\",\n                token: _token,\n            })\n\n            //Use SpotifyWebApi to access\n            spotify.setAccessToken(_token);\n\n            spotify.getMe().then(user => {\n                dispatch({\n                    type: \"SET_USER\",\n                    user: user,\n                })\n            });\n\n            spotify.getUserPlaylists().then((playlists) => {\n                dispatch({\n                    type: \"SET_PLAYLISTS\",\n                    playlists: playlists,\n                })\n            })\n\n            spotify.getPlaylist(\"37i9dQZEVXcCRKcjUBRO1l\").then((response) => {\n                dispatch({\n                    type: \"SET_DISCOVER_WEEKLY\",\n                    discover_weekly: response\n                })\n            })\n        }\n        console.log(\"I have token \" + token)\n    }, [])\n\n    return (\n        // BEM\n        <div className=\"app\">\n        {\n            token ? (\n                <Player spotify={spotify}/>\n            ) : (\n                <Login />\n\n            )\n        }\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const initialState = {\r\n    user: null,\r\n    playlists: [],\r\n    current_playlist : null,\r\n    playing: false,\r\n    item: null,\r\n    shuffle: false,\r\n    repeat: \"off\",\r\n    token: null\r\n    // token: \"BQB9qtzMXAZLqQB2-3ew8FKEqlqkPdYHWhxZrnQsK2XBpl53rdq9Uz7ybVNo4gquWujvDXGqGIg5c-TUOn7Iz-P59W01IPLhY5LIo3QjAlHTCLcHo8syg5l7ZMfMNxNvmCxI7_B_mkLC7fpcBWYi02BQwWvLqz8rBgMXyQppVCR4eDn2bKB9\",\r\n}\r\n\r\nconst reducer = (state, action) => {\r\n    // console.log(action);\r\n\r\n    // Action -> Type, [Payload]\r\n\r\n    switch(action.type){\r\n        case 'SET_USER':\r\n            return {\r\n                ...state,\r\n                user: action.user,\r\n            }\r\n        \r\n        case 'SET_TOKEN':\r\n            return {\r\n                ...state,\r\n                token: action.token,\r\n            }\r\n        \r\n        case 'SET_PLAYLISTS':\r\n            return {\r\n                ...state,\r\n                playlists: action.playlists,\r\n            }\r\n        \r\n        case 'SET_DISCOVER_WEEKLY':\r\n            return {\r\n                ...state,\r\n                discover_weekly: action.discover_weekly,\r\n                current_playlist: action.discover_weekly\r\n            }\r\n        \r\n        case 'SET_CURRENT_PLAYLIST':\r\n            return {\r\n                ...state,\r\n                current_playlist: action.current_playlist\r\n            }\r\n            \r\n        // case 'SET_CURRENT_PLAYLIST_ID':\r\n        //     return {\r\n        //         ...state,\r\n        //         current_playlist_id: action.current_playlist_id\r\n        //     }\r\n        \r\n        case 'SET_PLAYING':\r\n            return {\r\n                ...state,\r\n                playing: action.playing\r\n            }\r\n        \r\n        case 'SET_SHUFFLE':\r\n            return {\r\n                ...state,\r\n                shuffle: action.shuffle\r\n            }\r\n        \r\n        case 'SET_ITEM':\r\n            return {\r\n                ...state,\r\n                item : action.item\r\n            }\r\n        \r\n        case 'SET_REPEAT':\r\n            return {\r\n                ...state,\r\n                repeat : action.repeat\r\n            }\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {DataLayer} from './Components/DataLayer';\nimport reducer, { initialState } from './reducer';\n\nReactDOM.render(\n  <React.StrictMode>\n    <DataLayer initialState={initialState} reducer={reducer}>\n    <App />\n    </DataLayer>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}